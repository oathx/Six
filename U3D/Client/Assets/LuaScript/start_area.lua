import 'System'
import 'UnityEngine'
import 'Assembly-CSharp'	-- The user-code assembly generated by Unity.

module("start_area", package.seeall)

--[[
-- skip button clicked
--]]
function OnSkipClicked(go, evt)
	local errorText = LogicHelper.GetErrorText(ErrorCode.ERR_SKIPSTARTAREA)

	UISystem.GetSingleton():Box(BoxStyle.YESNO, errorText, 0, OnYesNoClicked)
end

--[[
-- 
--]]
function OnYesNoClicked(bFlag, args)
	-- if clicked yes button then send leave level protocol to server
	if bFlag then
		LevelRequest.GetSingleton():RequestLeaveLevel()
	end
	
	return true
end


--[[
-- read duplicat config file, create a group monster
--
-- @groupID 
--]]
local function create_group_monster(bVirtualServer, groupID)
	local sqlScene = lua_export.get_sql_scene()
	if not sqlScene then
		return false
	end
	
	if bVirtualServer then
		SceneRequest.GetSingleton():ReqSceneEvent(1, groupID)
	else
		-- query current scene all npc info
		local group = MonsterTable.GetSingleton():GetGroupMonster(sqlScene, groupID)
		if not group then
			return false
		end
		
		-- create npc object
		local enumerator = group:GetEnumerator()
		while enumerator:MoveNext() do
			local npc 	= enumerator.Current
	
			-- create monster game object
			local monster = lua_export.create_monster("ET_MONSTER", EntityType.ET_MONSTER, npc.ID, 
									npc.Position, Vector3.one, Vector3.zero, 0, npc.NpcID)
		end
	end
end

--[[
-- timer callback
--]]
function OnTimerCallback(args)
	create_group_monster(0)
end

-- scene loading finish, game engine will call this function
function OnSceneStart()	
	-- load battle observer
	lua_export.load_observer('AttackObserver')
	
	-- show skip start level ui
	local ui = lua_export.show_ui('UIStartArea', ResourceDef.UI_STARTAREA)
	if ui then 
		-- hook skip button clicked event
		ui:RegisterClickEvent(UIStartArea.US_SKIP, OnSkipClicked)
	end
	
	-- start ai server
	lua_export.start_ai_server()

	-- if the trigger to fire, will create the *.Pass.bytes(in SqlScene table)
	-- file defined in the first group of monsters 
	lua_export.add_trigger(0, TriggerType.TRIGGER_NULL,
		Vector3(-20.76, 0.27, -0.66), Vector3.zero, Vector3(4, 1, 4), true)
end

--[[
/// <summary>
/// Gets or sets the I.
/// </summary>
/// <value>The I.</value>
public int 			ID
{ get; set; }

/// <summary>
/// Gets or sets the handle.
/// </summary>
/// <value>The handle.</value>
public object		Handle
{ get; set; }

/// <summary>
/// Gets or sets a value indicating whether this <see cref="CmdEvent+SceneTriggerEventArgs"/> is enter.
/// </summary>
/// <value><c>true</c> if enter; otherwise, <c>false</c>.</value>
public bool			Enter
{ get; set; }

/// <summary>
/// Gets or sets the event I.
/// </summary>
/// <value>The event I.</value>
public int 			EventID
{ get; set; }

/// <summary>
/// Gets or sets the target.
/// </summary>
/// <value>The target.</value>
public Collider 	Who
{ get; set; }
--]]
function OnSceneTrigger(evt)
	if evt.Enter then
		create_group_monster(true, evt.ID)
	end
end


